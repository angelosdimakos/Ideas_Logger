name: Run Tests (Windows Only)

on:
  push:
    branches:
      - main
      - master
      - feature/**
      - fix/**
      - dev/**
  pull_request:
    branches:
      - main
      - master

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: 🧾 Checkout full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: 🐍 Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11.8"  # ← Pin due to broken tkinter in 3.11.9 on GitHub Actions (as of Apr 2025)

      - name: 📦 Install Dependencies
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install pytest pytest-cov
          pip install numpy==1.24.0 pydantic==1.10.2 ollama==0.1.0 sentence-transformers
          pip install torch faiss-cpu --only-binary=faiss-cpu
          pip install -e .
          pip freeze

      - name: ✅ Run Unit + Integration Tests
        shell: powershell
        run: |
          python -m pytest -c pytest.ini --cov=scripts --cov-config=.coveragerc --cov-report=xml --cov-report=html
      

      - name: 📄 Check for Coverage Report
        run: |
          if not exist coverage.xml (
            echo ❌ coverage.xml not found!
            exit /b 1
          ) else (
            echo ✅ Found coverage.xml
          )

      - name: 📈 Upload HTML Coverage Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: htmlcov-windows
          path: htmlcov/

      - name: ☁️ Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: 🧠 Run RefactorGuard Audit
        run: |
          python scripts/refactor/refactor_guard_cli.py \
            --refactored scripts \
            --all \
            --missing-tests \
            --json

      - name: 🚨 Show Complexity Summary
        run: python scripts/utils/complexity_summary.py refactor_audit.json

      - name: 📤 Upload Refactor Audit
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: refactor-audit
          path: refactor_audit.json

      - name: 🧾 Audit Summary Recap
        run: |
          python -c "
          import json
          with open('refactor_audit.json') as f:
              data = json.load(f)
          method_count = sum(len(file.get('complexity', {})) for file in data.values())
          file_count = len(data)
          print(f'\n📊 Summary:\n🧠 Methods analyzed: {method_count}\n🔧 Files analyzed: {file_count}')
          "
