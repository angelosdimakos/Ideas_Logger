name: Run Tests (Windows Only)

on:
  push:
    branches:
      - main
      - master
      - feature/**
      - fix/**
      - dev/**
  pull_request:
    branches:
      - main
      - master

jobs:
  test:
    runs-on: windows-latest

    steps:
      - name: üßæ Checkout full history
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: üêç Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"

      - name: üì¶ Install Dependencies (Explicit)
        shell: powershell
        run: |
          python -m pip install --upgrade pip wheel setuptools
          pip install pytest
          pip install numpy==1.24.0 pydantic==1.10.2 ollama==0.1.0 sentence-transformers pytest pytest-cov
          pip install torch
          pip install faiss-cpu --only-binary=faiss-cpu
          pip freeze

      - name: üîç Debug Working Directory and Test Files
        shell: powershell
        run: |
          Write-Host "Current Directory:"
          pwd
          Write-Host "Listing test files recursively:"
          Get-ChildItem tests -Recurse

      - name: ‚úÖ Run Unit + Integration Tests
        shell: powershell
        run: |
          python -m pytest -c pytest.ini `
            --cov=scripts --cov-config=.coveragerc `
            --cov-report=xml --cov-report=html

      - name: üß† Run RefactorGuard (Audit Only - Non-blocking)
        shell: powershell
        run: |
          python scripts/refactor/refactor_guard_cli.py `
            --refactored scripts `
            --all `
            --missing-tests `
            --json > refactor_audit.json

      - name: üö® Show Complexity Warnings
        shell: powershell
        run: |
          $audit = Get-Content -Raw -Path refactor_audit.json | ConvertFrom-Json
          $maxAllowed = 10
          $warnings = @()

          foreach ($file in $audit.PSObject.Properties.Name) {
            $complexity = $audit[$file].complexity
            if ($complexity) {
              foreach ($method in $complexity.PSObject.Properties) {
                $score = $complexity[$method.Name]
                if ($score -gt $maxAllowed) {
                  $warnings += "‚ö†Ô∏è $file ‚Üí $($method.Name): $score"
                }
              }
            }
          }

          if ($warnings.Count -gt 0) {
            Write-Host "`n‚ö†Ô∏è Complexity Warnings:"
            $warnings | ForEach-Object { Write-Host $_ }
          } else {
            Write-Host "‚úÖ No complexity warnings."
          }

      - name: üì§ Upload Refactor Audit (Artifact)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: refactor-audit
          path: refactor_audit.json

      - name: üìà Upload Coverage Reports
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: htmlcov-windows
          path: htmlcov/

      - name: üß™ Debug coverage file presence
        shell: powershell
        run: |
          if (-Not (Test-Path "./coverage.xml")) {
            Write-Host "‚ùå coverage.xml not found!"
            exit 1
          } else {
            Write-Host "‚úÖ coverage.xml found, ready for Codecov upload."
          }

      - name: ‚òÅÔ∏è Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage.xml
          fail_ci_if_error: true
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}

      - name: üßæ Audit Summary Recap
        shell: powershell
        run: |
          $json = Get-Content -Raw -Path refactor_audit.json | ConvertFrom-Json
          $methodCount = 0
          $fileCount = $json.PSObject.Properties.Count

          foreach ($file in $json.PSObject.Properties.Name) {
            $complexity = $json[$file].complexity
            if ($complexity) {
              $methodCount += $complexity.PSObject.Properties.Count
            }
          }

          Write-Host "`nüìä Summary:"
          Write-Host "üß† Methods analyzed: $methodCount"
          Write-Host "üîß Files analyzed: $fileCount"