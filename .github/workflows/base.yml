name: Run Tests & CI Audit (Dockerized)

on:
  push:
    branches: [main, master, "feature/**", "fix/**", "dev/**"]
  pull_request:
    branches: [main, master]

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write
  statuses: write
  packages: read

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container:
      image: ghcr.io/angelosdimakos/ideas_logger:latest
    steps:
      - uses: actions/checkout@v3

      - name: 🧼 Run Linter Report CLI
        run: |
          echo "🔎 Running Linter Report CLI..."
          python scripts/refactor/lint_report_pkg/lint_report_cli.py --audit refactor_linting.json  

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-report
          path: linting_report.json

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container:
      image: ghcr.io/angelosdimakos/ideas_logger:latest
    env:
      ZEPHYRUS_HEADLESS: "1"
    steps:
      - uses: actions/checkout@v3

      - name: ✅ Run Tests
        run: |
          echo "🧪 Running tests with coverage..."
          xvfb-run -a pytest -n auto -c pytest.ini \
            --cov=scripts --cov-config=.coveragerc \
            --cov-report=term --cov-report=html --cov-report=json
          echo "✅ Coverage reports generated (.coverage, HTML, JSON)"

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: coverage-reports
          path: |
            .coverage
            coverage.json
            coverage.xml
            htmlcov/

      - name: ☁️ Upload to Codecov
        uses: codecov/codecov-action@v5
        continue-on-error: true
        with:
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: angelosdimakos/Ideas_Logger

      - name: 🧠 Run RefactorGuard
        run: |
          echo "📊 Running RefactorGuard..."
          python scripts/refactor/refactor_guard_cli.py \
            --refactored scripts --all \
            --json --output refactor_audit.json \
            --coverage-path coverage.json # Important: Pass coverage data

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: refactor-audit
          path: refactor_audit.json

  docstring:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container:
      image: ghcr.io/angelosdimakos/ideas_logger:latest
    steps:
      - uses: actions/checkout@v3

      - name: 📋 Generate Docstring Summary
        run: |
          echo "📚 Generating docstring summary..."
          python scripts/refactor/parsers/docstring_parser.py --json 

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docstring-summary
          path: docstring_summary.json

  report:
    needs: [lint, test, docstring]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    if: ${{ success() }}
    container:
      image: ghcr.io/angelosdimakos/ideas_logger:latest
    env:
      ZEPHYRUS_HEADLESS: "1"
    steps:
      - uses: actions/checkout@v3

      - name: 📥 Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: ✨ Generate Combined Report
        run: |
          echo "⚗️ Merging Reports..."
          python scripts/refactor/merge_audit_reports.py \
            --docstrings artifacts/docstring-summary/docstring_summary.json \
            --coverage artifacts/refactor-audit/refactor_audit.json \
            --linting artifacts/lint-report/linting_report.json \
            -o artifacts/merged_report.json

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: combined-report
          path: artifacts/merged_report.json

      - name: 📊 Summarize Combined Report (Optional)
        run: |
          echo "📝 Summarizing Combined Report (Example - Replace with your logic)"
          python scripts/ci_analyzer/cli.py \
            --audit artifacts/merged_report.json \
            --output ci_merged_summary.md

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ci-summary
          path: ci_merged_summary.md

      - name: 💬 Post PR Summary (Optional)
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: ci-summary/ci_merged_summary.md