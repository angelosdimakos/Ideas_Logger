name: Run Tests & CI Audit (Dockerized)

on:
  push:
    branches: [main, master, "feature/**", "fix/**", "dev/**"]
  pull_request:
    branches: [main, master]

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write
  statuses: write
  packages: read  # Added permission to read packages

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Add authentication to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Use docker run instead of container directive for better auth handling
      - name: Run linters in container
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace \
            ghcr.io/angelosdimakos/ideas_logger:latest \
            bash -c "mkdir -p lint-reports && \
                    black --check scripts > lint-reports/black.txt 2>&1 || true && \
                    flake8 scripts > lint-reports/flake8.txt 2>&1 || true && \
                    MYPYPATH=. mypy --explicit-package-bases scripts > lint-reports/mypy.txt 2>&1 || true && \
                    pydocstyle scripts > lint-reports/pydocstyle.txt 2>&1 || true && \
                    interrogate -v scripts > lint-reports/interrogate.txt 2>&1 || true"

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-reports
          path: lint-reports/

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Add authentication to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Use docker run instead of container directive
      - name: Run tests in container
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace \
            -e ZEPHYRUS_HEADLESS=1 \
            ghcr.io/angelosdimakos/ideas_logger:latest \
            bash -c "apt-get update && apt-get install -y xvfb && \
                    xvfb-run -a pytest -n auto -c pytest.ini \
                    --cov=scripts --cov-config=.coveragerc \
                    --cov-report=xml --cov-report=html"

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: htmlcov
          path: htmlcov/

      - name: Upload to Codecov
        uses: codecov/codecov-action@v5
        continue-on-error: true
        with:
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: angelosdimakos/Ideas_Logger

      # Run refactor audits in container
      - name: Run Refactor Audits
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace \
            -e ZEPHYRUS_HEADLESS=1 \
            ghcr.io/angelosdimakos/ideas_logger:latest \
            bash -c "python scripts/refactor/refactor_guard_cli.py \
              --refactored scripts --all --missing-tests \
              --json --output refactor_full_audit.json && \
              python scripts/refactor/refactor_guard_cli.py \
              --refactored scripts --all --git-diff --missing-tests \
              --json --output refactor_diff_audit.json"

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: refactor-audits
          path: |
            refactor_full_audit.json
            refactor_diff_audit.json

      # Generate docstring summary in container
      - name: Generate Docstring Summary
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace \
            -e PYTHONPATH="/workspace:$PYTHONPATH" \
            ghcr.io/angelosdimakos/ideas_logger:latest \
            python scripts/refactor/parsers/docstring_parser.py --json

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docstring-summary
          path: docstring_summary.json

  report:
    needs: [lint, test]
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v3

      - name: Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      # Add authentication to GitHub Container Registry
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Run all reporting in container
      - name: Enrich and Summarize CI
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace \
            -e ZEPHYRUS_HEADLESS=1 \
            ghcr.io/angelosdimakos/ideas_logger:latest \
            bash -c "python scripts/refactor/enrich_refactor_pkg/enrich_refactor_ci.py \
              --audit artifacts/refactor-audits/refactor_full_audit.json \
              --reports artifacts/lint-reports \
              --docstrings artifacts/docstring-summary/docstring_summary.json && \
              python scripts/refactor/enrich_refactor_pkg/enrich_refactor_ci.py \
              --audit artifacts/refactor-audits/refactor_diff_audit.json \
              --reports artifacts/lint-reports \
              --docstrings artifacts/docstring-summary/docstring_summary.json && \
              python scripts/ci_analyzer/cli.py \
              --audit artifacts/refactor-audits/refactor_full_audit.json \
              --output ci_full_summary.md && \
              python scripts/ci_analyzer/cli.py \
              --audit artifacts/refactor-audits/refactor_diff_audit.json \
              --output ci_diff_summary.md && \
              python scripts/ci_analyzer/ci_trends.py \
              --audit artifacts/refactor-audits/refactor_full_audit.json && \
              python scripts/ci_analyzer/ci_trends.py \
              --audit artifacts/refactor-audits/refactor_diff_audit.json"

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ci-summary-and-trends
          path: |
            ci_full_summary.md
            ci_diff_summary.md
            .ci-history/

      - name: Post Summary
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: ci_diff_summary.md