name: Run Tests & CI Audit (Dockerized)

on:
  push:
    branches: [main, master, "feature/**", "fix/**", "dev/**"]
  pull_request:
    branches: [main, master]

permissions:
  contents: read
  actions: read
  checks: write
  pull-requests: write
  statuses: write
  packages: read

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container:
      image: ghcr.io/angelosdimakos/ideas_logger:latest
    steps:
      - uses: actions/checkout@v3

      - name: üßº Run Linters
        run: |
          echo "üîé Running linters..."
          mkdir -p lint-reports
          black --check scripts       > lint-reports/black.txt 2>&1 || true
          flake8 scripts              > lint-reports/flake8.txt 2>&1 || true
          MYPYPATH=. mypy --explicit-package-bases scripts > lint-reports/mypy.txt 2>&1 || true
          pydocstyle scripts          > lint-reports/pydocstyle.txt 2>&1 || true
          interrogate -v scripts      > lint-reports/interrogate.txt 2>&1 || true

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: lint-reports
          path: lint-reports/

  test:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    container:
      image: ghcr.io/angelosdimakos/ideas_logger:latest
    env:
      ZEPHYRUS_HEADLESS: "1"
    steps:
      - uses: actions/checkout@v3

      - name: ‚úÖ Run Tests
        run: |
          echo "üß™ Running tests with coverage..."
          xvfb-run -a pytest -n auto -c pytest.ini \
            --cov=scripts --cov-config=.coveragerc \
            --cov-report=xml --cov-report=html

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: htmlcov
          path: htmlcov/

      - name: ‚òÅÔ∏è Upload to Codecov
        uses: codecov/codecov-action@v5
        continue-on-error: true
        with:
          files: ./coverage.xml
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: angelosdimakos/Ideas_Logger

      - name: üß† RefactorGuard Full + Diff Audit
        run: |
          echo "üìä Running RefactorGuard audits..."
          python scripts/refactor/refactor_guard_cli.py \
            --refactored scripts --all --missing-tests \
            --json --output refactor_full_audit.json
          python scripts/refactor/refactor_guard_cli.py \
            --refactored scripts --all --git-diff --missing-tests \
            --json --output refactor_diff_audit.json

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: refactor-audits
          path: |
            refactor_full_audit.json
            refactor_diff_audit.json

      - name: üìã Generate Docstring Summary
        run: |
          echo "üìö Generating docstring summary..."
          python scripts/refactor/parsers/docstring_parser.py --json

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: docstring-summary
          path: docstring_summary.json

  report:
    needs: [lint, test]
    timeout-minutes: 5
    runs-on: ubuntu-latest
    if: always()
    container:
      image: ghcr.io/angelosdimakos/ideas_logger:latest
    env:
      ZEPHYRUS_HEADLESS: "1"
    steps:
      - uses: actions/checkout@v3

      - name: üì• Download Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ./artifacts

      - name: üìä Enrich & Summarize CI
        run: |
          echo "üß† Enriching audits and generating summaries..."
          python scripts/refactor/enrich_refactor_pkg/enrich_refactor_ci.py \
            --audit artifacts/refactor-audits/refactor_full_audit.json \
            --reports artifacts/lint-reports \
            --docstrings artifacts/docstring-summary/docstring_summary.json
          python scripts/refactor/enrich_refactor_pkg/enrich_refactor_ci.py \
            --audit artifacts/refactor-audits/refactor_diff_audit.json \
            --reports artifacts/lint-reports \
            --docstrings artifacts/docstring-summary/docstring_summary.json

          python scripts/ci_analyzer/cli.py \
            --audit artifacts/refactor-audits/refactor_full_audit.json \
            --output ci_full_summary.md
          python scripts/ci_analyzer/cli.py \
            --audit artifacts/refactor-audits/refactor_diff_audit.json \
            --output ci_diff_summary.md

          python scripts/ci_analyzer/ci_trends.py \
            --audit artifacts/refactor-audits/refactor_full_audit.json
          python scripts/ci_analyzer/ci_trends.py \
            --audit artifacts/refactor-audits/refactor_diff_audit.json

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: ci-summary-and-trends
          path: |
            ci_full_summary.md
            ci_diff_summary.md
            .ci-history/

      - name: üí¨ Post PR Summary
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          path: ci_diff_summary.md
